---
- name: "change owner keystone log directory"
  file:
    dest: "/var/log/keystone"
    state: "directory"
    owner: "keystone"
    group: "keystone"
    recurse: yes

- name: "set values to keystone config"
  ini_file:
    dest: "/etc/keystone/keystone.conf"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { section: "DEFAULT", option: "admin_token", value: "{{ contrail_service_token }}" }
    - { section: "DEFAULT", option: "log_file", value: "keystone.log" }
    - { section: "DEFAULT", option: "onready", value: "keystone.common.systemd" }
    - { section: "database", option: "connection", value: "mysql://keystone:keystone@{{ hostvars[groups['openstack'][0]]['contrail_address'] }}/keystone?charset=utf8" }
    - { section: "memcache", option: "servers", value: "{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:11211" }
    - { section: "keystone_authtoken", option: "admin_tenant_name", value: "service" }
    - { section: "keystone_authtoken", option: "admin_user", value: "keystone" }
    - { section: "keystone_authtoken", option: "admin_password", value: "{{ contrail_admin_password }}" }
    - { section: "catalog", option: "template_file", value: "default_catalog.templates" }
    - { section: "catalog", option: "driver", value: "keystone.catalog.backends.sql.Catalog" }
    - { section: "identity", option: "driver", value: "keystone.identity.backends.sql.Identity" }
    - { section: "token", option: "driver", value: "keystone.token.backends.memcache.Token" }
    - { section: "ec2", option: "driver", value: "keystone.contrib.ec2.backends.sql.Ec2" }

- name: "change database address if first node"
  ini_file:
    dest: "/etc/keystone/keystone.conf"
    section: "database"
    option: "connection"
    value: "mysql://keystone:keystone@127.0.0.1/keystone?charset=utf8"
  run_once: yes

- name: "change memcache address if first node"
  ini_file:
    dest: "/etc/keystone/keystone.conf"
    section: "memcache"
    option: "servers"
    value: "127.0.0.1:11211"
  run_once: yes

- name: "sync database for keystone"
  shell: "keystone-manage db_sync"
  run_once: yes

- name: "restart keystone"
  service:
    name: "keystone"
    state: "restarted"

- name: "delete keystone sqlite database"
  file:
    dest: "/var/lib/keystone/keystone.db"
    state: "absent"

- name: "create keystone service"
  shell: "keystone service-get '{{ item.service }}' || keystone service-create --name '{{ item.service }}' --type '{{ item.type }}' --description '{{ item.desc }}'"
  environment:
    OS_AUTH_URL: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
    OS_SERVICE_TOKEN: "{{ contrail_service_token }}"
    OS_SERVICE_ENDPOINT: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  with_items:
    - { service: "nova", type: "compute", desc: "Nova Compute Service" }
    - { service: "ec2", type: "ec2", desc: "EC2 Compatibility Layer" }
    - { service: "glance", type: "image", desc: "Glance Image Service" }
    - { service: "keystone", type: "identity", desc: "Keystone Identity Service" }
    - { service: "cinder", type: "volume", desc: "Cinder Volume Service" }
    - { service: "horizon", type: "dashboard", desc: "OpenStack Dashboard" }
    - { service: "heat", type: "orchestration", desc: "Orchestration Service" }
    - { service: "neutron", type: "network", desc: "Neutron Network Service" }
  run_once: yes

- name: "create keystone endpoint"
  shell: "keystone endpoint-list | grep -q $(keystone service-get '{{ item.service }}' | grep '| *id *|' | awk '{print $4}') || keystone endpoint-create --region 'RegionOne' --service '{{ item.service }}' --publicurl '{{ item.public }}' --internal '{{ item.internal }}' --adminurl '{{ item.admin }}'"
  environment:
    OS_AUTH_URL: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
    OS_SERVICE_TOKEN: "{{ contrail_service_token }}"
    OS_SERVICE_ENDPOINT: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  with_items:
    - { service: "nova", public: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(compute_port)s/v1.1/$(tenant_id)s", internal: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(compute_port)s/v1.1/$(tenant_id)s", admin: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(compute_port)s/v1.1/$(tenant_id)s" }
    - { service: "ec2", public: "http://localhost:8773/services/Cloud", internal: "http://localhost:8773/services/Cloud", admin: "http://localhost:8773/services/Admin" }
    - { service: "glance", public: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:9292/v1", internal: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:9292/v1", admin: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:9292/v1" }
    - { service: "keystone", public: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(public_port)s/v2.0", internal: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(admin_port)s/v2.0", admin: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:$(admin_port)s/v2.0" }
    - { service: "cinder", public: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8776/v1/$(tenant_id)s", internal: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8776/v1/$(tenant_id)s", admin: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8776/v1/$(tenant_id)s" }
    - { service: "cinder", public: "http://localhost:8080/v1/AUTH_$(tenant_id)s", internal: "http://localhost:8080/v1/AUTH_$(tenant_id)s", admin: "http://localhost:8080/v1/AUTH_$(tenant_id)s" }
    - { service: "heat", public: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8004/v1/%(tenant_id)s", internal: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8004/v1/%(tenant_id)s", admin: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:8004/v1/%(tenant_id)s" }
    - { service: "neutron", public: "http://{{ hostvars[groups['config'][0]]['contrail_address'] }}:9696", internal: "http://{{ hostvars[groups['config'][0]]['contrail_address'] }}:9696", admin: "http://{{ hostvars[groups['config'][0]]['contrail_address'] }}:9696" }
  run_once: yes

- name: "create keystone tenant"
  keystone_user:
    tenant: "{{ item }}"
    token: "{{ contrail_service_token }}"
    endpoint: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  with_items:
    - "service"
    - "admin"
    - "demo"
  run_once: yes

# - name: "create keystone role"
  # keystone_user:
    # role: "{{ item }}"
    # token: "{{ contrail_service_token }}"
    # endpoint: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  # with_items:
    # - "KeystoneAdmin"
    # - "KeystoneServiceAdmin"
    # - "admin"
    # - "sysadmin"
    # - "netadmin"
    # - "Member"
  # run_once: yes

- name: "create keystone user"
  keystone_user:
    user: "{{ item.user }}"
    password: "{{ contrail_admin_password }}"
    email: "{{ item.user }}@example.com"
    tenant: "{{ item.tenant }}"
    token: "{{ contrail_service_token }}"
    endpoint: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  with_items:
    - { user: "glance", tenant: "service" }
    - { user: "cinder", tenant: "service" }
    - { user: "nova", tenant: "service" }
    - { user: "heat", tenant: "service" }
    - { user: "neutron", tenant: "service" }
    - { user: "{{ contrail_admin_user }}", tenant: "admin" }
    - { user: "demo", tenant: "demo" }
  run_once: yes

- name: "apply role to user"
  keystone_user:
    tenant: "{{ item.tenant }}"
    user: "{{ item.user }}"
    role: "{{ item.role }}"
    token: "{{ contrail_service_token }}"
    endpoint: "http://{{ hostvars[groups['openstack'][0]]['contrail_address'] }}:35357/v2.0/"
  with_items:
    - { tenant: "service", user: "glance", role: "admin" }
    - { tenant: "service", user: "cinder", role: "admin" }
    - { tenant: "service", user: "nova", role: "admin" }
    - { tenant: "service", user: "heat", role: "admin" }
    - { tenant: "service", user: "neutron", role: "admin" }
    - { tenant: "admin", user: "{{ contrail_admin_user }}", role: "KeystoneAdmin" }
    - { tenant: "admin", user: "{{ contrail_admin_user }}", role: "KeystoneServiceAdmin" }
    - { tenant: "admin", user: "{{ contrail_admin_user }}", role: "admin" }
    - { tenant: "demo", user: "{{ contrail_admin_user }}", role: "admin" }
    - { tenant: "demo", user: "demo", role: "sysadmin" }
    - { tenant: "demo", user: "demo", role: "netadmin" }
    - { tenant: "demo", user: "demo", role: "Member" }
  run_once: yes

- name: "create keystonerc"
  template:
    src: "templates/keystonerc.j2"
    dest: "/etc/contrail/keystonerc"
  run_once: yes
