---
- hosts: openstack
  sudo: yes
  tasks:
    - name: "check existing reserved ports"
      shell: "sysctl -n net.ipv4.ip_local_reserved_ports | sed -e 's/\\(.*\\)/\\1,33306,35357-35358/' | sed -e 's/^,//'"
      register: reserved_ports
      changed_when: no

    - name: set reserved ports
      sysctl:
        name: "net.ipv4.ip_local_reserved_ports"
        value: "{{ reserved_ports.stdout }}"
        sysctl_file: "/dev/null"
        sysctl_set: yes
        reload: no
      changed_when: no

    - name: "check reserved ports"
      shell: "sysctl -n net.ipv4.ip_local_reserved_ports"
      register: reserved_ports
      changed_when: no

    - name: "set reserved ports permanent"
      sysctl:
        name: "net.ipv4.ip_local_reserved_ports"
        value: "{{ reserved_ports.stdout }}"
        sysctl_set: no
        reload: no

    - include: -node-common.yml

    - name: "restart supervisor openstack"
      service:
        name: "supervisor-openstack"
        state: "restarted"

    - name: "stop openstack via supervisor"
      supervisorctl:
        name: "all"
        state: "stopped"
        server_url: "unix:///tmp/supervisord_openstack.sock"

    - include: -orchestrator-mysql-setup.yml
    - include: -orchestrator-memcached-setup.yml
    - include: -orchestrator-keystone-setup.yml
    - include: -orchestrator-glance-setup.yml
    - include: -orchestrator-cinder-setup.yml
    - include: -orchestrator-nova-setup.yml
    - include: -orchestrator-heat-setup.yml

    - name: "set openstack index"
      set_fact:
        contrail_openstack_index: "{{ item.0 + 1 }}"
      with_indexed_items: play_hosts
      when: item.1 == inventory_hostname

    - name: "fix up control details"
      lineinfile:
        dest: "/etc/contrail/ctrl-details"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        create: yes
      with_items:
        - { regexp: "^SERVICE_TOKEN=", line: "SERVICE_TOKEN={{ contrail_service_token }}" }
        - { regexp: "^ADMIN_TOKEN=", line: "ADMIN_TOKEN={{ contrail_admin_password }}" }
        - { regexp: "^CONTROLLER=", line: "CONTROLLER={{ hostvars[groups['openstack'][0]]['contrail_address'] }}" }
        - { regexp: "^API_SERVER=", line: "API_SERVER={{ hostvars[groups['config'][0]]['contrail_address'] }}" }
        - { regexp: "^AMQP_SERVER=", line: "AMQP_SERVER={{ hostvars[groups['config'][0]]['contrail_address'] }}" }
        - { regexp: "^QUANTUM_PROTOCOL=", line: "QUANTUM_PROTOCOL=http" }
        - { regexp: "^QUANTUM=", line: "QUANTUM={{ hostvars[groups['config'][0]]['contrail_address'] }}" }
        - { regexp: "^QUANTUM_PORT=", line: "QUANTUM_PORT=9696" }
        - { regexp: "^AUTH_PROTOCOL=", line: "AUTH_PROTOCOL=http" }
        - { regexp: "^SELF_MGMT_IP=", line: "SELF_MGMT_IP={{ contrail_mgmt_address }}" }
        - { regexp: "^OSAPI_COMPUTE_WORKERS=", line: "OSAPI_COMPUTE_WORKERS=40" }
        - { regexp: "^CONDUCTOR_WORKERS=", line: "CONDUCTOR_WORKERS=40" }
        - { regexp: "^OPENSTACK_INDEX=", line: "OPENSTACK_INDEX={{ contrail_openstack_index }}" }

    - name: "create openstackrc"
      template:
        src: "templates/openstackrc.j2"
        dest: "/etc/contrail/openstackrc"

    - name: "restart supervisor-openstack"
      service:
        name: "supervisor-openstack"
        state: "restarted"

    - name: "start openstack via supervisor"
      supervisorctl:
        name: "all"
        state: "started"
        server_url: "unix:///tmp/supervisord_openstack.sock"

    - name: "create service token file"
      template:
        src: "templates/service-token.j2"
        dest: "/etc/contrail/service.token"
        mode: 0400
      run_once: yes

    - name: "modify horizon configuration"
      lineinfile:
        dest: "/etc/openstack-dashboard/local_settings.py"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "HORIZON_CONFIG['customization_module']\\s*=", line: "HORIZON_CONFIG['customization_module'] = 'contrail_openstack_dashboard.overrides'" }
        - { regexp: "LOGOUT_URL\\s*=\\s*'/horizon/auth/logout/'", line: "LOGOUT_URL='/horizon/auth/logout/'" }

    - name: "restart apache2"
      service:
        name: "apache2"
        state: "restarted"
